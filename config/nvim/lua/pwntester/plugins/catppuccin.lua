return {
  -- {
  --   "pwntester/nautilus.nvim",
  --   dev = true,
  --   lazy = true,
  --   enabled = false,
  --   config = function()
  --     require("nautilus").load {
  --       transparent = false,
  --       mode = "halcyon",
  --     }
  --   end,
  -- },
  {
    "catppuccin/nvim",
    lazy = true,
    priority = 1000,
    name = "catppuccin",
    init = function()
      vim.cmd.colorscheme "catppuccin"
    end,
    opts = {
      flavour = "macchiato", -- latte, frappe, macchiato, mocha
      transparent_background = false,
      show_end_of_buffer = false,
      term_colors = true,
      no_italic = false,
      no_bold = false,
      no_underline = false,
      styles = {
        comments = { "italic" },
        conditionals = { "italic" },
        loops = {},
        functions = {},
        keywords = {},
        strings = {},
        variables = {},
        numbers = {},
        booleans = {},
        properties = {},
        types = {},
        operators = {},
        -- miscs = {}, -- Uncomment to turn off hard-coded styles
      },
      background = {
        light = "latte",
        dark = "macchiato",
      },
      dim_inactive = {
        enabled = true,
        shade = "dark",
        percentage = 0.1,
      },
      color_overrides = {
        --   all = {},
        macchiato = {
          rosewater = "#f4dbd6",
          flamingo = "#f0c6c6",
          pink = "#f5bde6",
          mauve = "#c6a0f6",
          red = "#ed8796",
          maroon = "#ee99a0",
          peach = "#f5a97f",
          yellow = "#eed49f",
          green = "#a6da95",
          teal = "#8bd5ca",
          sky = "#91d7e3",
          sapphire = "#7dc4e4",
          blue = "#8aadf4",
          lavender = "#b7bdf8",
          text = "#b8c0e0",
          subtext1 = "#b8c0e0",
          subtext0 = "#a5adcb",
          overlay2 = "#939ab7",
          overlay1 = "#8087a2",
          overlay0 = "#6e738d",
          surface2 = "#5b6078",
          surface1 = "#494d64",
          surface0 = "#363a4f",
          base = "#24273a",
          mantle = "#1e2030",
          crust = "#181926",
        },
      },
      custom_highlights = function(colors)
        return {
          ["NeoTreeWinSeparator"] = { fg = colors.base, bg = colors.base },
          ["CodeqlAstFocus"] = { fg = colors.mantle, bg = colors.sapphire },
          ["CodeqlRange"] = { fg = colors.mantle, bg = colors.sapphire },
          ["CodeQLWindowPicker"] = { fg = colors.man, bg = colors.sapphire },
          ["Identifier"] = { fg = colors.yellow },
          ["Special"] = { fg = colors.sapphire },
          ["Number"] = { fg = colors.green },
          ["NormalAlt"] = { fg = colors.text, bg = colors.mantle },
          ["@attribute"] = { fg = colors.mauve },
          ["@function.builtin"] = { fg = colors.mauve },
          ["@variable.builtin"] = { fg = colors.sky },
          ["@keyword.directive.markdown"] = { fg = colors.overlay0 },
          ["TelescopePromptTitle"] = { fg = colors.base, bg = colors.sapphire },
          ["@markup.heading.1"] = { fg = colors.green, bg = "#374243" },
          ["@markup.heading.2"] = { fg = colors.blue, bg = "#2E3D51" },
          ["@markup.heading.3"] = { fg = colors.lavender, bg = "#393B54" },
          ["@markup.heading.4"] = { fg = colors.peach, bg = "#46393E" },
          ["@markup.heading.5"] = { fg = colors.yellow, bg = "#464245" },
          ["@markup.heading.6"] = { fg = colors.red, bg = "#453244" },
          ["@markup.heading.1.markdown"] = { fg = colors.green, bg = "#374243" },
          ["@markup.heading.2.markdown"] = { fg = colors.blue, bg = "#2E3D51" },
          ["@markup.heading.3.markdown"] = { fg = colors.lavender, bg = "#393B54" },
          ["@markup.heading.4.markdown"] = { fg = colors.peach, bg = "#46393E" },
          ["@markup.heading.5.markdown"] = { fg = colors.yellow, bg = "#464245" },
          ["@markup.heading.6.markdown"] = { fg = colors.red, bg = "#453244" },
          ["MarkviewHeading1"] = { link = "@markup.heading.1" },
          ["MarkviewHeading2"] = { link = "@markup.heading.2" },
          ["MarkviewHeading3"] = { link = "@markup.heading.3" },
          ["MarkviewHeading4"] = { link = "@markup.heading.4" },
          ["MarkviewHeading5"] = { link = "@markup.heading.5" },
          ["MarkviewHeading6"] = { link = "@markup.heading.6" },
          ["MarkviewHeading1Sign"] = { link = "@markup.heading.1" },
          ["MarkviewHeading2Sign"] = { link = "@markup.heading.2" },
          ["MarkviewHeading3Sign"] = { link = "@markup.heading.3" },
          ["MarkviewHeading4Sign"] = { link = "@markup.heading.4" },
          ["MarkviewHeading5Sign"] = { link = "@markup.heading.5" },
          ["MarkviewHeading6Sign"] = { link = "@markup.heading.6" },
          ["MarkviewListItemMinus"] = { fg = colors.sapphire },
          ["MarkviewListItemPlus"] = { fg = colors.sapphire },
          ["MarkviewListItemStar"] = { fg = colors.sapphire },
          ["MarkviewImageLink"] = { fg = colors.blue },
          ["MarkviewHyperlink"] = { fg = colors.blue },
          ["MarkviewEmail"] = { fg = colors.blue },
          -- ["@lsp.type.decorator.markdown"] = { link = "Label" },
          -- ["RenderMarkdownH1"] = { link = "@markup.heading.1" },
          -- ["RenderMarkdownH2"] = { link = "@markup.heading.2" },
          -- ["RenderMarkdownH3"] = { link = "@markup.heading.3" },
          -- ["RenderMarkdownH4"] = { link = "@markup.heading.4" },
          -- ["RenderMarkdownH5"] = { link = "@markup.heading.5" },
          -- ["RenderMarkdownH6"] = { link = "@markup.heading.6" },
          -- ["RenderMarkdownH1Bg"] = { link = "@markup.heading.1" },
          -- ["RenderMarkdownH2Bg"] = { link = "@markup.heading.2" },
          -- ["RenderMarkdownH3Bg"] = { link = "@markup.heading.3" },
          -- ["RenderMarkdownH4Bg"] = { link = "@markup.heading.4" },
          -- ["RenderMarkdownH5Bg"] = { link = "@markup.heading.5" },
          -- ["RenderMarkdownH6Bg"] = { link = "@markup.heading.6" },
          -- ["RenderMarkdownBullet"] = { fg = colors.teal },
          -- ["RenderMarkdownDash"] = { fg = colors.teal },
          -- ["RenderMarkdownCode"] = { fg = nil, bg = colors.mantle },
          -- ["tmux_status_window_active"] = { fg = colors.mantle, bg = colors.green },
          -- ["tmux_status_window_inactive"] = { fg = colors.mantle, bg = colors.blue },
          -- ["tmux_status_window_inactive_recent"] = { fg = colors.mantle, bg = colors.orange },
          -- ["tmux_status_session"] = { fg = colors.mantle, bg = colors.green },
        }
      end,
      -- highlight_overrides = {
      --   all = function(colors)
      --     return {}
      --   end,
      -- },
      integrations = {
        barbecue = {
          dim_dirname = true, -- directory name is dimmed by default
          bold_basename = true,
          dim_context = false,
          alt_background = false,
        },
        cmp = true,
        dashboard = true,
        gitsigns = true,
        neotest = true,
        headlines = true,
        mason = true,
        fidget = true,
        lsp_trouble = true,
        markdown = true,
        neotree = true,
        nvimtree = false,
        noice = true,
        octo = true,
        telescope = {
          enabled = true,
          -- style = "nvchad",
        },
        treesitter = true,
        treesitter_context = false,
        notify = false,
        mini = {
          enabled = false,
        },
        native_lsp = {
          enabled = true,
          virtual_text = {
            errors = { "italic" },
            hints = { "italic" },
            warnings = { "italic" },
            information = { "italic" },
          },
          underlines = {
            errors = { "underline" },
            hints = { "underline" },
            warnings = { "underline" },
            information = { "underline" },
          },
        },
      },
    },
    init = function()
      -- disable Semantic Highlighting
      -- https://gist.github.com/swarn/fb37d9eefe1bc616c2a7e476c0bc0316#disabling-highlights
      for _, group in ipairs(vim.fn.getcompletion("@lsp", "highlight")) do
        vim.api.nvim_set_hl(0, group, {})
      end
    end,
  },
}
