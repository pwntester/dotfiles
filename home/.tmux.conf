# Remap prefix to ctrl-a
unbind C-b
set -g prefix C-Space

# vi mode for the buffer
setw -g mode-keys vi
set -g status-keys vi

# focus events enabled for terminals that support them
set -g focus-events on

# Bindings:
# - to see current bindings:
#   tmux list-keys

# Open new/split panes with the path of the current pane.
unbind c
bind c new-window -c '#{pane_current_path}'
unbind %
bind % split-window -h -c '#{pane_current_path}'
unbind '"'
bind '"' split-window -v -c '#{pane_current_path}'

# Cmd-k to clear screen as in terminal
bind -n C-k send-keys -R \; clear-history

# Split panes (On an American keyboard, the \ key is the same as the | key, and the - and | shapes suggest the splits that will be created.)
bind | split-window -h -c "#{pane_current_path}"
bind \ split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"

# Resize panes
bind -r h resize-pane -L 5
bind -r j resize-pane -D 5
bind -r k resize-pane -U 5
bind -r l resize-pane -R 5

# Copy mode
unbind [
bind-key Escape copy-mode
unbind v
bind-key -T copy-mode-vi 'v' send -X begin-selection
unbind V
bind-key -T copy-mode-vi 'V' send -X select-line
unbind p
bind-key p paste-buffer
unbind y
bind-key -T copy-mode-vi 'y' send-keys -X copy-selection-and-cancel


# Fast toggle between current and last-used window (normally prefix-l).
bind ^space last-window

# Smart pane switching with awareness of vim splits
is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# Set a shortcut for reloading your tmux config
bind r source-file ~/.tmux.conf

# Allow access to system clipboard in OSX
set -g default-shell $SHELL 
set -g default-command "reattach-to-user-namespace -l ${SHELL}"
set-option -g default-command "reattach-to-user-namespace -l $SHELL"

# Status bar
set -g status-left-length 41 
set -g status-fg white
set -g status-bg colour234
set -g status-left '#[fg=colour235,bg=colour252,bold] ❐ #S #[fg=colour252,bg=colour238,nobold]#[fg=colour245,bg=colour238,bold] #(whoami) #[fg=colour238,bg=colour234,nobold]'
set -g window-status-format "#[fg=white,bg=colour234] #I #W "
set -g window-status-current-format "#[fg=colour234,bg=colour39]#[fg=colour25,bg=colour39,noreverse,bold] #I  #W #[fg=colour39,bg=colour234,nobold]"
set -g window-status-activity-attr bold

# Automatically renumber window numbers on closing a pane (tmux >= 1.7).
set -g renumber-windows on

# Highlight active window.
#set -w -g window-status-current-bg red

# Mouse can be used to select panes, select windows (by clicking on the status
# bar), resize panes. For default bindings see `tmux list-keys`.
set -g mouse on

# Slightly more useful width in "main-vertical" layout; enough room for 3-digit
# line number gutter in Vim + 80 columns of text + 1 column breathing room
# (default looks to be about 79).
set -w -g main-pane-width 85

# True color
set-option -ga terminal-overrides ",screen-256color:Tc"

# History
set -g history-limit 4096

# Start window and pane numbering at 1, (0 is too hard to reach).
set -g base-index 1
set -g pane-base-index 1

# Make neovim happy
set -s escape-time 5

# Dynamically update iTerm tab and window titles.
set -g set-titles on
set -g set-titles-string "#T : #h > #S > #W"

# Show bells in window titles.
set -g window-status-bell-style fg=yellow,bold,underscore

# Don't wrap searches; it's super confusing given tmux's reverse-ordering of
# position info in copy mode.
set -w -g wrap-search off

# Turn off distracting border highlight: the background highlighting is probably
# enough. Default value of 8 comes from "pane-border-fg" in tmux's
# options-table.c.
set -g pane-active-border-fg 8

# Highlight active pane
#set -g window-active-style "bg=#17151c"
set -g window-active-style "bg=#020511"
set -g window-style "bg=#17252c"
set -g pane-active-border-bg "#17252c"
set -g pane-border-bg "#17252c"
