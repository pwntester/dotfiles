# Reattach each new window to the user bootstrap namespace
# https://github.com/ChrisJohnsen/tmux-MacOSX-pasteboard
# This allows notifications from within tmux
set -g default-command "reattach-to-user-namespace -l $SHELL"

# Enable true color - tmux 2.2+
# https://deductivelabs.com/en/2016/03/using-true-color-vim-tmux/
set-option -ga terminal-overrides ",xterm-256color:Tc"
set -g default-terminal "xterm-256color"

# Start window and pane numbering at 1, (0 is too hard to reach).
set -g base-index 1
set-window-option -g pane-base-index 1

# Automatically set window title
set-window-option -g automatic-rename on
set-option -g set-titles on
set-option -g allow-rename off
set-option -g status-position bottom

# Remap prefix to ctrl-a
unbind C-b
set -g prefix C-Space

# vi mode for the buffer
set -g status-keys vi
setw -g mode-keys vi

# History
set -g history-limit 4096

# focus events enabled for terminals that support them
set -g focus-events on

# do not monitor activity
setw -g monitor-activity off

# Set vim style copy paste
bind-key -T copy-mode-vi 'v' send-keys -X begin-selection
bind-key -T copy-mode-vi 'V' send-keys -X select-line
bind-key -T copy-mode-vi 'r' send-keys -X rectangle-toggle
bind-key -T copy-mode-vi 'y' send-keys -X copy-pipe-and-cancel 'reattach-to-user-namespace pbcopy'

# Bindings:
# - to see current bindings:
#   tmux list-keys

# Open new/split panes with the path of the current pane.
bind c new-window -c '#{pane_current_path}'
bind v split-window -h -c '#{pane_current_path}'
bind h split-window -v -c '#{pane_current_path}'

# Resize panes
bind H resize-pane -L 5
bind J resize-pane -D 5
bind K resize-pane -U 5
bind L resize-pane -R 5

# Resize window
set-window-option -g aggressive-resize on

# Fast toggle between current and last-used window (normally prefix-l).
bind-key b last-window
bind-key Space switch-client -l

# Make neovim happy
set -sg escape-time 0 # otherwise: 5

# Move window order with Ctrl-Shift-Left/Right
bind-key -n C-S-Left swap-window -t -1
bind-key -n C-S-Right swap-window -t +1

# Cmd-k to clear screen as in terminal
bind -n C-k send-keys -R \; clear-history

# Set a shortcut for reloading your tmux config
bind r source-file ~/.tmux.conf

# set update frequencey
set -g status-interval 1

# active window title colors
set-window-option -g window-status-current-style fg=brightred,bg=default,bright
set -g status-style bg=default

set -g @prefix_highlight_show_copy_mode 'on'
set -g @prefix_highlight_bg 'colour5'
set -g @prefix_highlight_fg 'black'

# Smart pane switching with awareness of vim splits
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -n 'C-\' if-shell "$is_vim" "send-keys 'C-\\'" "select-pane -l"
bind-key -T copy-mode-vi C-h select-pane -L
bind-key -T copy-mode-vi C-j select-pane -D
bind-key -T copy-mode-vi C-k select-pane -U
bind-key -T copy-mode-vi C-l select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l

# Status bar
set -g status-left-length 41 
set -g status-fg white
set -g status-bg colour234
set -g status-left '#[fg=colour235,bg=colour252,bold] ❐ #S #[fg=colour252,bg=colour238,nobold]#[fg=colour245,bg=colour238,bold] #(whoami) #[fg=colour238,bg=colour234,nobold]'
set -g window-status-format "#[fg=white,bg=colour234] #I #W "
set -g window-status-current-format "#[fg=colour234,bg=colour39]#[fg=colour25,bg=colour39,noreverse,bold] #I  #W #[fg=colour39,bg=colour234,nobold]"

# Automatically renumber window numbers on closing a pane (tmux >= 1.7).
set -g renumber-windows on

# Slightly more useful width in "main-vertical" layout; enough room for 3-digit
# line number gutter in Vim + 80 columns of text + 1 column breathing room
# (default looks to be about 79).
set -w -g main-pane-width 85

# Dynamically update iTerm tab and window titles.
set -g set-titles on
set -g set-titles-string "#T : #h > #S > #W"

# Don't wrap searches; it's super confusing given tmux's reverse-ordering of
# position info in copy mode.
set -w -g wrap-search off

# Highlight active pane
set -g window-active-style "bg=#0b1f41"
set -g window-style "bg=#11305f"
